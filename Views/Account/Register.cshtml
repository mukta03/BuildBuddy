@model BuildBuddy.Models.UserSignup

@{
    Layout = "~/Views/Account/NoLayout.cshtml";
    ViewBag.Title = "Register";

    var signupalert = ViewBag.signuperror as string;
    var loginalert = ViewBag.loginerror as string;
}

<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://kit.fontawesome.com/e834d2a7d1.js" crossorigin="anonymous"></script>
    <title>Register/Login</title>
    <link rel="stylesheet" href="~/wwwroot/css/register.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>

<body>

    <div class="back">
        <a href="@Url.Action("Index", "Home")"><p><button class="backbutton" type="button"><i class="fa-solid fa-chevron-left"></i>Back</button></p></a>
    </div>

    <div class="container" id="container">

        @if (ViewBag.signupview != null && (bool)ViewBag.signupview)
        {
            <text>
                <script>
                    function myFunction() {
                        const container = document.getElementById('container');
                        container.classList.add("right-panel-active");
                    }

                    myFunction();
                </script>
            </text>
        }

    <div class="form-container sign-up-container">

        @using (Html.BeginForm("Signup", "Account", FormMethod.Post))
        {

            @Html.AntiForgeryToken()

            <h1>Create Account</h1>

            <div class="social-container">
                <a href="#" class="social"><i class="fab fa-facebook-f"></i></a>
                <a href="#" class="social"><i class="fab fa-google-plus-g"></i></a>
                <a href="#" class="social"><i class="fab fa-linkedin-in"></i></a>
            </div>

            <span>or use your email for registration</span>

            <div>
                @if (!string.IsNullOrEmpty(signupalert))
                {
                    <script>
                    alert('@signupalert');
                    </script>
                }
            </div>
            //@Html.ValidationSummary(true, "", new { @class = "textred" })

            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "input", placeholder = "Name" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "textred" })

            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "input", placeholder = "Email" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "textred" })

            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "input", placeholder = "Password" } })
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "textred" })

            @Html.EditorFor(model => model.confirmpassword, new { htmlAttributes = new { @class = "input", placeholder = "Confirm Password" } })
            @Html.ValidationMessageFor(model => model.confirmpassword, "", new { @class = "textred" })

            <input type="submit" value="Sign Up" class="button" />

        }
    </div>

    <div class="form-container sign-in-container">
        @using (Html.BeginForm("Login", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <h1>Sign in</h1>

            <div class="social-container">
                <a href="#" class="social"><i class="fab fa-facebook-f"></i></a>
                <a href="#" class="social"><i class="fab fa-google-plus-g"></i></a>
                <a href="#" class="social"><i class="fab fa-linkedin-in"></i></a>
            </div>

            <span>or use your account</span>

            <div>
                @if (!string.IsNullOrEmpty(loginalert))
                {
                    <script>
                    alert('@loginalert');
                    </script>
                }
            </div>
            //@Html.ValidationSummary(true, "", new { @class = "textred" })

            @Html.EditorFor(model => model.loginemail, new { htmlAttributes = new { @class = "input", placeholder = "Email" } })
            @Html.ValidationMessageFor(model => model.loginemail, "", new { @class = "textred" })

            @Html.EditorFor(model => model.loginpassword, new { htmlAttributes = new { @class = "input", placeholder = "Password" } })
            @Html.ValidationMessageFor(model => model.loginpassword, "", new { @class = "textred" })

            <a href="#">Forgot your password?</a>

            <input type="submit" value="Sign In" class="button" />

        }

    </div>

        <div class="overlay-container">
            <div class="overlay">
                <div class="overlay-panel overlay-left">
                    <h1>Welcome Back, Tech Savvy!</h1>
                    <p>Resume Building your Beast.</p>
                    <button class="ghost" id="signIn">Sign In</button>
                </div>
                <div class="overlay-panel overlay-right">
                    <h1>Hello, Friend!</h1>
                    <p>Enter your personal details and start journey with us</p>
                    <button class="ghost" id="signUp">Sign Up</button>
                </div>
            </div>
        </div>

    </div>

    <script src="~/wwwroot/js/login.js"></script>

</body>

</html>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
